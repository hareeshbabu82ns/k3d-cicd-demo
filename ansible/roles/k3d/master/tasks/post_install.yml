---
- name: Copy k8s kubeconfig file
  shell:
    cmd: k3d kubeconfig get {{ cluster_name }} > ~{{ansible_ssh_user}}/.kube/config

- name: Update kubeconfig file authoriations
  file:
    path: ~{{ansible_ssh_user}}/.kube/config
    state: file
    owner: "{{ansible_ssh_user}}"
    mode: "u=rwx,g=,o="

- name: Wait for traefik pods become ready
  register: traefik_pods_ready
  command: "kubectl wait -n kube-system --for=condition=available deployment/traefik --timeout=600s"
  retries: 10
  delay: 10
  until: traefik_pods_ready.stdout.find("condition met") != -1

- debug: var=traefik_pods_ready.stdout_lines

- name: Add Helm Chart Repos
  community.kubernetes.helm_repository:
    name: "{{ item.name }}"
    repo_url: "{{ item.repo_url }}"
  loop:
    - { name: 'traefik', repo_url: 'https://helm.traefik.io/traefik' }
    - { name: 'jetstack', repo_url: 'https://charts.jetstack.io' }
    - { name: 'rancher-stable ', repo_url: 'https://releases.rancher.com/server-charts/stable' }

# kubectl create ns cert-manager
# helm install cert-manager jetstack/cert-manager -n cert-manager --set installCRDs=true

- name: Deploy Helm - Certificate Manager
  community.kubernetes.helm:
    name: cert-manager
    namespace: cert-manager
    chart_ref: jetstack/cert-manager
    chart_version: 1.1.0
    create_namespace: true
    wait: true
    # release_state: absent
    values:
      installCRDs: true
  tags:
    - helm
    - cert_manager
    
- name: Deploy Helm - Rancher
  community.kubernetes.helm:
    name: rancher
    namespace: cattle-system
    chart_ref: rancher-stable/rancher
    chart_version: 2.5.5
    create_namespace: true
    # wait: true
    # release_state: absent
    values:
      hostname: rancher.{{ cluster_domain }}
  tags:
    - helm
    - rancher
  # ignore_errors: yes

- name: Create Registry Secret Key
  command: >-
    kubectl create secret docker-registry registry-secret \
      --docker-server={{ docker_server }} \
      --docker-username={{ docker_user }} \
      --docker-password={{ docker_pass }}
  tags:
    - docker-registry


- name: Copy service account deployment files
  template:
    src: "{{ item }}"
    dest: "~{{ansible_ssh_user}}/templates/{{ item }}"
    owner: "{{ansible_ssh_user}}"
    mode: "u=rwx,g=rx,o="
  loop:
    - 'service-account.yaml'
  tags:
    - service-account

- name: Create Service Account
  command: >-
    kubectl apply -f ~{{ansible_ssh_user}}/templates/service-account.yaml
  tags:
    - service-account

- name: Add Registry Secret Key
  command: >-
    kubectl patch serviceaccount default \
      -p '{"imagePullSecrets": [{"name": "registry-secret"}]}'
  tags:
    - docker-registry

- name: Fetch Kube Config file
  fetch:
    src: ~{{ansible_user}}/.kube/config
    dest: ~/.kube/{{cluster_name}}.yml
    flat: yes
  tags:
    - fetch-config

- name: Update Kube Config to work from local
  replace:
    path: ~/.kube/{{cluster_name}}.yml
    after: 'server: https://'
    before: ':'
    regexp: '^(.+)$'
    replace: '{{ansible_host}}'
    # backup: yes
  delegate_to: localhost
  become: false
  tags:
    - fetch-config

- name: Switch to new context in local
  command: kubectl config use-context k3d-{{cluster_name}}
  delegate_to: localhost
  become: false
  tags:
    - fetch-config  