---
- name: drone info
  command: drone info

- name: kube server url
  command: >- 
    kubectl config view \
    -o jsonpath='{.clusters[?(@.name=="{{k8s_cluster}}")].cluster.server}'
  register: k8s_server_env

- debug: var=k8s_server_env.stdout
- set_fact:
    k8s_server_env: "{{k8s_server_env.stdout | regex_replace('0.0.0.0',ansible_host)}}"
- debug: var=k8s_server_env

- name: kube deploy-bot secret
  command: >- 
    kubectl get sa deploy-bot -o jsonpath='{.secrets[*].name}'
  register: k8s_deploy_bot_secret

- debug: var=k8s_deploy_bot_secret.stdout

- name: kube deploy-bot certificate
  command: >- 
    kubectl get secret {{k8s_deploy_bot_secret.stdout}} \
      -o jsonpath='{.data.ca\.crt}'
  register: k8s_cert_env

- debug: var=k8s_cert_env.stdout

- name: kube deploy-bot token
  command: >- 
    kubectl get secret {{k8s_deploy_bot_secret.stdout}} \
      -o jsonpath='{.data.token}'
  register: k8s_token_env

- debug:
    var: k8s_token_env.stdout | b64decode
  
- name: sample docker run test with k8s certificates
  register: docker_run_test
  command: >-
    docker run --rm \
      -e PLUGIN_KUBERNETES_SERVER={{k8s_server_env | default( k8s_server )}} \
      -e PLUGIN_KUBERNETES_CERT={{k8s_cert_env.stdout | default(k8s_cert)}} \
      -e PLUGIN_KUBERNETES_TOKEN={{(k8s_token_env.stdout  | b64decode) | default(k8s_token)}} \
      sinlead/drone-kubectl get nodes
- debug: var=docker_run_test.stdout_lines

- name: cleanup repo settings first
  command: drone secret rm {{repo_user}}/{{git_repo}} --name {{item.name}}
  loop:
    - {name: docker_user, data: "{{docker_user}}" }
    - {name: docker_pass, data: "{{docker_pass}}" }
    - {name: k8s_server, data: "{{k8s_server_env}}" }
    - {name: k8s_cert, data: "{{k8s_cert_env.stdout}}" }
    - {name: k8s_token, data: "{{k8s_token_env.stdout  | b64decode}}" }
    - {name: pipeline_notifier, data: "{{pipeline_notifier}}" }
    - {name: cluster_domain, data: "{{cluster_domain}}" }
    - {name: docker_url, data: "{{docker_server}}" }
    - {name: server_domain, data: "{{server_domain}}" }
  ignore_errors: yes

- name: push repo settings
  command: drone secret add {{repo_user}}/{{git_repo}} --name {{item.name}} --data {{item.data}}
  loop:
    - {name: docker_user, data: "{{docker_user}}" }
    - {name: docker_pass, data: "{{docker_pass}}" }
    - {name: k8s_server, data: "{{k8s_server_env}}" }
    - {name: k8s_cert, data: "{{k8s_cert_env.stdout}}" }
    - {name: k8s_token, data: "{{k8s_token_env.stdout  | b64decode}}" }
    - {name: pipeline_notifier, data: "{{pipeline_notifier}}" }
    - {name: cluster_domain, data: "{{cluster_domain}}" }
    - {name: docker_url, data: "{{docker_server}}" }
    - {name: server_domain, data: "{{server_domain}}" }